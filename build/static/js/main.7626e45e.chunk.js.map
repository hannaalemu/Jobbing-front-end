{"version":3,"sources":["components/auth/context.js","components/if.js","components/auth/auth.js","components/auth/login.js","components/jobs.js","components/header.js","app.js","index.js"],"names":["LoginContext","React","createContext","API","REACT_APP_SECRET","LoginProvider","props","login","username","password","type","options","method","mode","cache","headers","Headers","Authorization","btoa","body","JSON","stringify","fetch","then","response","text","token","validateToken","catch","console","error","logout","setLoginState","user","jwt","verify","loggedIn","cookie","save","setState","state","cookieToken","load","this","Provider","value","children","Component","If","condition","Auth","okToRender","capability","context","capabilities","includes","contextType","Login","handleChange","event","target","name","handleSubmit","preventDefault","onClick","placeholder","onChange","Job","jobs","newJobData","title","location","dateApplied","editJobData","_id","newJobModal","editJobModal","handleChangeTitle","handleChangeLocation","handleChangeDateApplied","addNewJob","superagent","post","push","editJob","updateJob","put","_refreshJobs","id","handleDelete","delete","get","log","map","job","key","Button","color","size","bind","className","toggleNewJobModal","Modal","isOpen","toggle","ModalHeader","ModalBody","FormGroup","Label","for","Input","ModalFooter","toggleEditJobModal","Table","Header","App","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.7626e45e.chunk.js","sourcesContent":["/* eslint-disable no-console */\r\n/* eslint-disable react/prop-types */\r\n// Hanna - this is the context provider, creates methods and data required for autorization\r\n\r\nimport React from 'react';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nimport cookie from 'react-cookies';\r\n\r\nexport const LoginContext = React.createContext();\r\n\r\nconst API = 'https://jobbing-back-end.herokuapp.com';\r\n\r\nconst REACT_APP_SECRET='jobbingisawesome';\r\n\r\nclass LoginProvider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // Hanna - all the auth data we are passing to children\r\n      loggedIn: false,\r\n      token: null,\r\n      user: {},\r\n      login: this.login,\r\n      logout: this.logout,\r\n    };\r\n  }\r\n\r\n\r\n  // Hanna - Login\r\n  login = (username, password, type) => {\r\n    const options = {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      headers: new Headers({\r\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n      }),\r\n    };\r\n\r\n    if (type === 'signup') {\r\n      options.body = JSON.stringify({ username, password });\r\n      options.headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n      });\r\n    }\r\n    fetch(`${API}/${type}`, options)\r\n      .then((response) => response.text())\r\n      .then((token) => this.validateToken(token))\r\n      .catch(console.error);\r\n  }\r\n  // Logout\r\n\r\n  logout = () => {\r\n    this.setLoginState(false, null, {});\r\n  }\r\n\r\n  // validateToken\r\nvalidateToken = (token) => {\r\n  try {\r\n    const user = jwt.verify(token, REACT_APP_SECRET);\r\n    this.setLoginState(true, user, token);\r\n  } catch (error) {\r\n    this.setLoginState(false, null, {});\r\n  }\r\n}\r\n// state handling\r\n\r\n  setLoginState = (loggedIn, user, token) => {\r\n    cookie.save('auth', token);\r\n    this.setState({ token, loggedIn, user });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const cookieToken = cookie.load('auth');\r\n    this.validateToken(cookieToken);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n            <LoginContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </LoginContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginProvider;\r\n","const If = (props) => {\r\n  return props.condition ? props.children : null;\r\n};\r\n  \r\nexport default If;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { LoginContext } from './context';\r\nimport If from '../if';\r\n\r\n\r\nclass Auth extends React.Component {\r\n  static contextType = LoginContext;\r\n\r\n  render() {\r\n    let okToRender = false;\r\n      \r\n    try {\r\n      if (this.props.capability) {\r\n        if (this.context.user.capabilities.includes(this.props.capability)) { okToRender = true; }\r\n      }\r\n    } catch (error) {\r\n      // console.warn('Unauthorized request');\r\n    }\r\n      \r\n    return (\r\n            <If condition ={okToRender}>\r\n                <div>{this.props.children}</div>\r\n            </If>\r\n    );\r\n  }\r\n}\r\n  \r\nAuth.propTypes = {\r\n  children: PropTypes.object,\r\n  capability: PropTypes.string,\r\n};\r\n\r\nexport default Auth;\r\n","// Auth Form for holding input values\r\nimport React from 'react';\r\n\r\nimport { LoginContext } from './context';\r\n\r\nconst If = (props) => {\r\n  return props.condition ? props.children : null;\r\n};\r\n\r\nclass Login extends React.Component {\r\n  static contextType = LoginContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: '', password: '' };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (event, type) => {\r\n    event.preventDefault();\r\n    this.context.login(this.state.username, this.state.password, type);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <If condition={this.context.loggedIn}>\r\n          <button onClick={this.context.logout}>Log Out</button>\r\n        </If>\r\n\r\n        <If condition={!this.context.loggedIn}>\r\n          <form>\r\n            <input\r\n              placeholder=\"UserName\"\r\n              name=\"username\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <input\r\n              placeholder=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <button onClick={(event) => this.handleSubmit(event, 'signin')}>Sign In</button>\r\n            <button onClick={(event) => this.handleSubmit(event, 'signup')}>Sign Up</button>\r\n          </form>\r\n        </If>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\n\r\nimport { Modal, ModalHeader, ModalBody,Input, FormGroup, Label, ModalFooter, Table, Button } from 'reactstrap';\r\n\r\nimport superagent from 'superagent';\r\n\r\nclass Job extends Component {\r\n\r\n  state = {\r\n    jobs : [],\r\n\r\n    newJobData: {\r\n      title: '',\r\n      location: '',\r\n      dateApplied: ''\r\n    },\r\n\r\n    editJobData: {\r\n      _id: '',\r\n      title: '',\r\n      location: '',\r\n      dateApplied: ''\r\n    },\r\n\r\n    newJobModal: false,\r\n    editJobModal: false\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this._refreshJobs();\r\n    \r\n  }\r\n\r\n  _refreshJobs() {\r\n\r\n    superagent.get('https://jobbing-back-end.herokuapp.com/api/v1/job')\r\n      .then((response => {\r\n        console.log(response);\r\n        this.setState({\r\n          jobs: response.body\r\n        })\r\n\r\n    }))\r\n  }\r\n\r\n  toggleNewJobModal() {\r\n    this.setState({\r\n      newJobModal : !this.state.newJobModal\r\n  })\r\n  }\r\n\r\n  toggleEditJobModal() {\r\n    this.setState({\r\n      editJobModal : !this.state.editJobModal\r\n  })\r\n  }\r\n\r\n  handleChangeTitle = (event) =>  {\r\n    let { newJobData } = this.state;\r\n    newJobData.title = event.target.value;\r\n\r\n    this.setState({ newJobData });\r\n  }\r\n\r\n  handleChangeLocation = (event) =>  {\r\n    let { newJobData } = this.state;\r\n    newJobData.location = event.target.value;\r\n\r\n    this.setState({ newJobData });\r\n  }\r\n\r\n  handleChangeDateApplied = (event) =>  {\r\n    let { newJobData } = this.state;\r\n    newJobData.dateApplied = event.target.value;\r\n\r\n    this.setState({ newJobData });\r\n  }\r\n\r\n  addNewJob = (event) => {\r\n    superagent.post('https://jobbing-back-end.herokuapp.com/api/v1/job', this.state.newJobData) \r\n      .then((response) => {\r\n        \r\n        // Hanna = After we add a new Job,  we want to reset the state to include the new job, close the modal, and reset new Job Data to empty so the user can add another job, and they won't see the old job data in the modal\r\n        let { jobs } = this.state;\r\n\r\n        jobs.push( response.body )\r\n\r\n        this.setState({ jobs, newJobModal: false, newJobData: {\r\n          title: '',\r\n          location: '',\r\n          dateApplied: ''\r\n\r\n         }});\r\n\r\n      })\r\n \r\n  }\r\n\r\n  // Hanna this method binds the respective job's information to the modal when the edit button is clicked and pops up the new edit job modal\r\n  editJob = (_id, title, location, dateApplied) => {\r\n    \r\n    this.setState({\r\n    \r\n      editJobData: {_id, title, location, dateApplied } , editJobModal: !this.state.editJobModal\r\n\r\n    });\r\n  }\r\n\r\n\r\n  updateJob = () => {\r\n    let { title, location, dateApplied } = this.state.editJobData;\r\n\r\n    superagent.put('https://jobbing-back-end.herokuapp.com/api/v1/job/' + this.state.editJobData._id, {\r\n      \r\n      title, location, dateApplied \r\n    })\r\n      .then((response) => {\r\n        \r\n        this._refreshJobs();\r\n\r\n      });\r\n\r\n      this.setState ({\r\n\r\n      editJobModal: false, editJobData: {\r\n        id: '',\r\n        title: '',\r\n        location: '',\r\n        dateApplied: ''\r\n\r\n      },\r\n    });\r\n  }\r\n\r\n  handleDelete = (_id) => {\r\n    superagent.delete('https://jobbing-back-end.herokuapp.com/api/v1/job/' + _id, {\r\n     \r\n    })\r\n      .then((response) => {\r\n        \r\n        this._refreshJobs();\r\n\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let jobs = this.state.jobs.map((job) => {\r\n\r\n      return (\r\n        <tr key={job._id}>\r\n\r\n              <td>{job._id}</td>\r\n              <td>{job.title}</td>\r\n              <td>{job.location}</td>\r\n              <td>{job.dateApplied}</td>\r\n\r\n              <td>\r\n\r\n                <Button color=\"success\" size=\"sm\" onClick={ this.editJob.bind(this, job._id, job.title, job.location, job.dateApplied ) }>Edit</Button>\r\n\r\n                <Button color=\"danger\" size=\"sm\" onClick={ this.handleDelete.bind(this, job._id) }>Delete</Button>\r\n\r\n              </td>\r\n            </tr>\r\n      )\r\n\r\n    })\r\n    return (\r\n      <div className='Job container'>\r\n\r\n        <Button color=\"primary\" onClick={this.toggleNewJobModal.bind(this)}>Add new Job</Button>\r\n\r\n        <Modal isOpen={this.state.newJobModal} toggle={this.toggleNewJobModal.bind(this)}>\r\n\r\n          <ModalHeader toggle={this.toggleNewJobModal.bind(this)}>Add a new Job</ModalHeader>\r\n\r\n          <ModalBody>\r\n\r\n            <FormGroup>\r\n\r\n              <Label for=\"title\">Title</Label>\r\n              <Input id=\"title\" value={this.state.newJobData.title}  onChange={this.handleChangeTitle} placeholder=\"Ex. Software Developer\"></Input>\r\n\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              \r\n              <Label for=\"location\">Location</Label>\r\n              <Input id=\"location\" value={this.state.newJobData.location} onChange={ this.handleChangeLocation } placeholder=\"Ex. Seattle\" ></Input>\r\n\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              \r\n              <Label for=\"dateApplied\">Date Applied</Label>\r\n              <Input id=\"dateApplied\" value={this.state.newJobData.dateApplied} onChange={this.handleChangeDateApplied } placeholder=\"Ex. October 2, 2019\" ></Input>\r\n\r\n            </FormGroup>\r\n\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.addNewJob.bind(this)}>Add Job</Button>\r\n            <Button color=\"secondary\" onClick={this.toggleNewJobModal.bind(this)}>Cancel</Button>\r\n\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n\r\n\r\n\r\n      <Modal isOpen={this.state.editJobModal} toggle={this.toggleEditJobModal.bind(this)}>\r\n\r\n      <ModalHeader toggle={this.toggleEditJobModal.bind(this)}>Edit Job</ModalHeader>\r\n\r\n      <ModalBody>\r\n\r\n        <FormGroup>\r\n\r\n          <Label for=\"title\">Title</Label>\r\n          <Input id=\"title\" value={this.state.editJobData.title}  onChange={(event) =>  {\r\n              let { editJobData } = this.state;\r\n              editJobData.title = event.target.value;\r\n\r\n              this.setState({ editJobData });\r\n\r\n            }} />\r\n\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          \r\n          <Label for=\"location\">Location</Label>\r\n          <Input id=\"location\" value={this.state.editJobData.location} onChange={(event) =>  {\r\n              let { editJobData } = this.state;\r\n              editJobData.location = event.target.value;\r\n\r\n              this.setState({ editJobData });\r\n\r\n            }} />  \r\n\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          \r\n          <Label for=\"dateApplied\">Date Applied</Label>\r\n          <Input id=\"dateApplied\" value={this.state.editJobData.dateApplied} onChange={(event) =>  {\r\n              let { editJobData } = this.state;\r\n              editJobData.dateApplied = event.target.value;\r\n\r\n              this.setState({ editJobData });\r\n\r\n            }} />\r\n\r\n        </FormGroup>\r\n\r\n      </ModalBody>\r\n\r\n      <ModalFooter>\r\n        <Button color=\"primary\" onClick={this.updateJob.bind(this)}>Update Job</Button>\r\n        <Button color=\"secondary\" onClick={this.toggleEditJobModal.bind(this)}>Cancel</Button>\r\n\r\n      </ModalFooter>\r\n\r\n      </Modal>\r\n\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Job ID</th>\r\n              <th>Title</th>\r\n              <th>Location</th>\r\n              <th>Date Applied</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {jobs}\r\n          </tbody>\r\n\r\n        </Table>\r\n\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Job;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <h2>Hello!</h2>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\n\r\nimport Auth from './components/auth/auth';\r\n\r\nimport LoginProvider from './components/auth/context';\r\n\r\nimport Login from './components/auth/login';\r\n\r\nimport Jobs from './components/jobs';\r\n\r\nimport Header from './components/header';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n      <LoginProvider>\r\n        <Login />\r\n       <Auth capability=\"read\">\r\n         <Header />\r\n         <Jobs />\r\n       </Auth>\r\n      </LoginProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport App from './app';\r\n\r\n\r\n\r\nconst Main = () => {\r\n  return (\r\n    // <Provider store={store}>\r\n      < App />\r\n    // </Provider>\r\n  );\r\n};\r\n\r\nconst root = document.getElementById('root');\r\nReactDOM.render(<Main />, root);\r\n"],"sourceRoot":""}